{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","jobs","setJobs","value","setValue","fetchJobs","a","fetch","response","json","newJobs","useEffect","className","company","dates","duties","title","map","item","index","onClick","id","duty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA2GeA,MArGf,WAAe,MAIeC,oBAAS,GAJxB,mBAIRC,EAJQ,KAICC,EAJD,OAMSF,mBAAS,IANlB,mBAMRG,EANQ,KAMFC,EANE,OAQWJ,mBAAS,GARpB,mBAQRK,EARQ,KAQDC,EARC,KAYTC,EAAS,uCAAG,8BAAAC,EAAA,sEAEOC,MAhBb,6CAcM,cAEVC,EAFU,gBAIMA,EAASC,OAJf,OAIVC,EAJU,OAOhBR,EAAQQ,GAGRV,GAAW,GAVK,2CAAH,qDAuBf,GANAW,qBAAU,WACRN,MAEA,IAGCN,EACD,OAAO,yBAASa,UAAU,kBAAnB,SACL,8CArCW,MA2CwBX,EAAKE,GAArCU,EA3CQ,EA2CRA,QAASC,EA3CD,EA2CCA,MAAOC,EA3CR,EA2CQA,OAAOC,EA3Cf,EA2CeA,MAE5B,OACE,0BAASJ,UAAU,UAAnB,UAEE,sBAAKA,UAAU,QAAf,UACE,4CACA,qBAAKA,UAAU,iBAGjB,sBAAKA,UAAU,cAAf,UAGE,qBAAKA,UAAU,gBAAf,SAGIX,EAAKgB,KAAI,SAACC,EAAMC,GACd,OAAO,wBAENC,QAAS,kBAAIhB,EAASe,IAEtBP,UAAS,kBAAaO,IAAUhB,GAAS,cAJnC,SAMJe,EAAKL,SALFK,EAAKG,SAcjB,0BAAST,UAAU,WAAnB,UACE,6BAAKI,IACL,6BAAKH,IACL,mBAAGD,UAAU,WAAb,SAAyBE,IAExBC,EAAOE,KAAI,SAACK,EAAMH,GACjB,OAAO,sBAAiBP,UAAU,WAA3B,UACL,cAAC,IAAD,CAAoBA,UAAU,aAG9B,4BAAIU,MAJWH,gBC3EdI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.886d191f.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { FaAngleDoubleRight } from 'react-icons/fa'\n\nconst url = 'https://course-api.com/react-tabs-project'\n\nfunction App() {\n\n\n//this state handles display of loading\nconst [loading, setLoading] = useState(true);\n//state to store the jobs\nconst [jobs, setJobs] = useState([]);\n//looking for first item in the array\nconst [value, setValue] = useState(0);\n\n\n//we need a function to fetch the jobs from the api\nconst fetchJobs = async () =>{\n  //this will get the data from the api\n  const response = await fetch(url);\n  //need to store this into json\n  const newJobs = await response.json();\n\n  //now we set the jobs to these json data\n  setJobs(newJobs);\n\n  //need to set loading false because at this point the data is loaded\n  setLoading(false);\n  \n\n}\n\n\n//this use effect runs during the initial rendering \nuseEffect(()=>{\n  fetchJobs();\n\n},[]);\n\n\nif(loading){\n  return <section className='section loading'>\n    <h1>Loading...</h1>\n  </section>\n}\n\n//right after loading the data we need to de structure it\n//value is the iterator here\nconst {company, dates, duties,title} = jobs[value];\n\n  return (\n    <section className=\"section\">\n    \n      <div className=\"title\">\n        <h1>Experience</h1>\n        <div className='underline'/>\n      </div>\n      \n      <div className=\"jobs-center\">\n        {/* btn container */}\n        {/* render a button for every job we have */}\n        <div className=\"btn-container\">\n\n          {\n            jobs.map((item, index)=>{\n              return <button\n               key={item.id}\n               onClick={()=>setValue(index)}\n               //if the index of the button matches the current value state change className\n               className={`job-btn ${index === value && 'active-btn'}`}\n               >\n                {item.company}\n              </button>;\n            })\n          }\n\n        </div>\n        \n\n        {/* job info */}\n        <article className=\"job-info\">\n          <h3>{title}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{dates}</p>\n          {/* mapping duties */}\n          {duties.map((duty, index)=>{\n            return <div key={index} className=\"job-desc\">\n              <FaAngleDoubleRight className=\"job-icon\">\n              \n              </FaAngleDoubleRight>\n              <p>{duty}</p>\n            </div>\n\n          })}\n\n\n        </article>\n\n      </div>\n\n\n    </section>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}